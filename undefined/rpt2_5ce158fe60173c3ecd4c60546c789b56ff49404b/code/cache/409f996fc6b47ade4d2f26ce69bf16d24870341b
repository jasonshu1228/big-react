{"code":"import { HostRoot, HostComponent, HostText } from './workTags';\r\nimport { appendChildToContainer } from 'hostConfig';\r\nimport { NoFlags, MutationMask, Placement } from './fiberFlags';\r\n// 保存下一个需要执行的effecct 节点\r\nlet nextEffect = null;\r\n// commitMutationEffects 函数主要用来完成副作用的执行，包括重置文本节点以及真实的dom节点的插入、删除和更新等操作。\r\nexport const commitMutationEffects = (finishedWork) => {\r\n    nextEffect = finishedWork;\r\n    while (nextEffect !== null) {\r\n        // 向下遍历\r\n        const child = nextEffect.child;\r\n        if ((nextEffect.subtreeFlags & MutationMask) !== NoFlags &&\r\n            child !== null) {\r\n            // 如果有子节点，且子节点有副作用，则将子节点作为下一个需要执行的effect节点\r\n            nextEffect = child;\r\n            continue;\r\n        }\r\n        else {\r\n            // 如果没有子节点，或者子节点没有副作用(也就是说不是叶子节点，可能遇到第一个没有subtreeFlags的节点)，则当前节点可能存在 Flags，有的话需要执行副作用\r\n            // 向上遍历\r\n            up: while (nextEffect !== null) {\r\n                // 如果当前节点有副作用，则执行副作用\r\n                commitMutationEffectsOnFiber(nextEffect);\r\n                const sibling = nextEffect.sibling;\r\n                if (sibling !== null) {\r\n                    nextEffect = sibling;\r\n                    // 如果有兄弟节点，且兄弟节点有副作用，则将兄弟节点作为下一个需要执行的effect节点\r\n                    break up;\r\n                }\r\n                // 如果没有兄弟节点，且父节点有副作用，则将父节点作为下一个需要执行的effect节点\r\n                nextEffect = nextEffect.return;\r\n            }\r\n        }\r\n    }\r\n};\r\nconst commitMutationEffectsOnFiber = (finishedWork) => {\r\n    const flags = finishedWork.flags;\r\n    if ((flags & Placement) !== NoFlags) {\r\n        // 执行插入操作等\r\n        commitPlacement(finishedWork);\r\n        // 将 Placement 标记从 finishedWork当前工作的节点中 清除\r\n        finishedWork.flags &= ~Placement;\r\n        // flags Update\r\n        // flags ChildDeletion\r\n    }\r\n};\r\n// commitPlacement 函数主要用来完成真实的dom节点的插入、删除和更新等操作。\r\nconst commitPlacement = (finishedWork) => {\r\n    // 需要获取 parentFiber Dom节点\r\n    // 需要获取 finishedWork Dom节点\r\n    if (true) {\r\n        console.warn('执行Placement操作', finishedWork);\r\n    }\r\n    // parentFiber Dom节点\r\n    const hostParent = getHostParent(finishedWork);\r\n    // 1. finishedWork Dom节点  2. appendChild\r\n    if (hostParent !== null) {\r\n        appendPlacementNodeInToContainer(finishedWork, hostParent);\r\n    }\r\n};\r\n// 该函数用于获取宿主环境里当前节点的父节点\r\n/**\r\n * 向上找到 fiber 最近的包含实际宿主环境节点 fiber 的宿主节点\r\n * @param fiber\r\n * @returns\r\n */\r\nfunction getHostParent(fiber) {\r\n    let parent = fiber.return;\r\n    while (parent) {\r\n        const parentTag = parent.tag;\r\n        // HostComponent HostRoot\r\n        if (parentTag === HostComponent) {\r\n            return parent.stateNode;\r\n        }\r\n        if (parent.tag === HostRoot) {\r\n            return parent.stateNode.container;\r\n        }\r\n        parent = parent.return;\r\n    }\r\n    if (true) {\r\n        console.warn('未找到host parent');\r\n    }\r\n    return null;\r\n}\r\n// 该函数用于将当前节点(fiber类型的)插入到宿主环境里的父节点中\r\nfunction appendPlacementNodeInToContainer(finishedWork, hostParent) {\r\n    // fiber 需要找到对应的dom节点，然而这个fiber节点可能是一个组件，所以需要调用createInstance方法来创建一个真实的dom节点\r\n    if (finishedWork.tag === HostComponent || finishedWork.tag === HostText) {\r\n        // 插入真实的dom节点\r\n        appendChildToContainer(hostParent, finishedWork.stateNode);\r\n        return;\r\n    }\r\n    // 递归向下的过程，直到我们找到一个真实的dom节点（HostComponent 或 HostText）\r\n    // 递归的过程中，会将所有的子节点和兄弟节点都插入到宿主环境里的父节点中\r\n    const child = finishedWork.child;\r\n    if (child !== null) {\r\n        appendPlacementNodeInToContainer(child, hostParent);\r\n        let sibling = child.sibling;\r\n        while (sibling !== null) {\r\n            appendPlacementNodeInToContainer(sibling, hostParent);\r\n            sibling = sibling.sibling;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=commitWork.js.map","references":["/Users/liangshuhao/Learn/coderwhy/Learn React/Big-React18-/big-react18/packages/react-reconciler/src/workTags.ts","/Users/liangshuhao/Learn/coderwhy/Learn React/Big-React18-/big-react18/packages/react-dom/src/hostConfig.ts","/Users/liangshuhao/Learn/coderwhy/Learn React/Big-React18-/big-react18/packages/react-reconciler/src/fiberFlags.ts","/Users/liangshuhao/Learn/coderwhy/Learn React/Big-React18-/big-react18/packages/react-reconciler/src/fiber.ts"],"map":"{\"version\":3,\"file\":\"commitWork.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../packages/react-reconciler/src/commitWork.ts\"],\"names\":[],\"mappings\":\"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\"}"}
